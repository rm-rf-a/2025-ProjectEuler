--------------------------------------------------------------
1부터 n까지의 자연수를 차례로 더하여 구해진 값을 삼각수라고 합니다.
예를 들어 7번째 삼각수는 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28이 됩니다.
이런 식으로 삼각수를 구해 나가면 다음과 같습니다.

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
이 삼각수들의 약수를 구해 봅시다.

 1: 1
 3: 1, 3
 6: 1, 2, 3, 6
10: 1, 2, 5, 10
15: 1, 3, 5, 15
21: 1, 3, 7, 21
28: 1, 2, 4, 7, 14, 28
위에서 보듯이, 5개 이상의 약수를 갖는 첫번째 삼각수는 28입니다.

그러면 500개 이상의 약수를 갖는 가장 작은 삼각수는 얼마입니까?
--------------------------------------------------------------

t=1


def getMyDivisor(n):

    divisorsList = []

    for i in range(1, int(n**(1/2)) + 1):
        if (n % i == 0):
            divisorsList.append(i) 
            if ( (i**2) != n) : 
                divisorsList.append(n // i)

    divisorsList.sort()
    
    return len(divisorsList)

i=1
while i<10000000000000000000000 :
    if getMyDivisor(i) >= 501:
        print(i)
        break
    t=t+1 
    i=i+t

소인수분해하고 각 소인수의 지수에 1을 더한값을곱한다.(이렇게안품)

삼각수 더해지는 점화식 찾고 약수갯수 구했다 (시간은 나의편ㅋㅋ)

----------------------------------------------------------------------------

삼각수(triangular number)
1부터 시작하는 연속된 자연수의 합을 나타내는 수로 처음 몇 삼각수는 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190, ... 이다. 삼각수는 다음 공식으로 구할 수 있다.

1+2+3+⋯+n=n(n+1)2=n2+n2=(n+12)
일화에 의하면, 카를 프리드리히 가우스는 10살 때 1부터 100까지의 자연수를 모두 더하라는 선생님의 말을 듣고, 이러한 합을 1+100, 2+99와 같이 합이 101이 되는 50쌍의 수의 합으로 전환하여 5050임을 구하였다.

위키백과, 삼각수
OEIS, A000217 Triangular numbers

약수 함수(Divisor function)
자연수 n
의 약수의 개수, 약수의 합 등 약수의 x
거듭제곱의 합을 약수 함수 σx(n)
라 한다. 즉, σx(n)=∑d∣ndx
이고, 여기서 d∣n
는 n
의 약수 d
 표시이다. n
을 소인수 분해한 결과가 ∏ri=1paii
일 때, 약수 함수는 다음과 같다.

σx(n)=∏i=1r∑j=0aipjxi=∏i=1r(1+pxi+p2xi+⋯+paixi)
x ≠ 0일 때는 아래처럼 조금 단순하게 표시할 수 있다:

σx(n)=∏i=1rp(ai+1)xi−1pxi−1
x = 0일 때는 아래처럼 더 단순하고, 이는 약수의 개수를 나타내고 τ(n)
또는 d(n)
으로도 표기한다:

σ0(n)=∏i=1r(ai+1)
