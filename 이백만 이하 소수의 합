------------------------------------------------------------

10 이하의 소수를 모두 더하면 2 + 3 + 5 + 7 = 17 이 됩니다.

이백만(2,000,000) 이하 소수의 합은 얼마입니까?

------------------------------------------------------------
Problem 10


n = 2000001
arr1 = [1 for i in range(n)]
prime = []
sum1 = 0
for i in range(2,int(n**0.5+1),1):
    for u in range(2*i,n,i):
        arr1[u]=0

        
for i in range(2,len(arr1),1):
    if arr1[i]==1:
        sum1=sum1+i
print(sum1)

362번 풀던거 가져와서 그냥 품;;
에타토스테네스체로 소수찾아서 배열번호만 저장한다음에 그 배열 번호 다 더해서 출력.



-----------------------------------------------------------------------------
소수의 합(prime sums)
처음 n
개 소수의 합은, n
이 작은 경우 에라토스테네스의 체 등으로 직접 구하는 것이 빠르고, n
이 매우 클 경우는 어림할 수 밖에 없다. 처음 몇 소수의 합은 2, 5, 10, 17, 28, 41, 58, 77, ... 이다. 에라토스테네스의 체를 구성할 수 없을 정도로 n
이 매우 큰 경우 소수의 합은 다음과 같이 어림할 수 있다. 이백만 이하 소수의 합에 대해 아래 공식을 적용하면 대략 7.6%의 오차가 발생한다.

∑k=1npk∼12n2lnn
참고로, 1737년에 오일러는 소수 역수의 합이 매우 느리지만 결국에는 무한대로 발산한다는 것을 보였다.

∑k=1∞1pk=∞
OEIS, A007504 Sum of the first n primes.
MathWorld, Prime Sums
-----------------------------------------------------------------------------
